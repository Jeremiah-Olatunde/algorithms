import { type Point } from "./utils";
import { closestPair } from "./naive";
import { deepStrictEqual } from "assert/strict";

{
  // trivial case
  // [(0, 0),(1, 1),(3, 3)]
  // [(0, 0),(1, 1)]
  const points: Point[] = [ [0, 0], [1, 1], [3, 3] ];
  const pair: [Point, Point] = [ [ 0, 0 ], [ 1, 1 ] ]; 
  deepStrictEqual(closestPair(points), pair);
}


{
  // +ve points
  // [(5, 0),(5, 8),(1, 7),(1, 4),(2, 5)]
  // [(1, 4),(2, 5)]
  const points: Point[] = [ [ 5, 0 ], [ 5, 8 ], [ 1, 7 ], [ 1, 4 ], [ 2, 5 ] ];
  const pair: [Point, Point] = [ [ 1, 4 ], [ 2, 5 ] ];
  deepStrictEqual(closestPair(points), pair);
}

{
  // -ve points
  // [(-1, -9),(-5, -9),(-9, -1),(-4, -3),(-9, -6)]
  // [(-1, -9),(-5, -9)]
  const points: Point[] = [ [ -1, -9 ], [ -5, -9 ], [ -9, -1 ], [ -4, -3 ], [ -9, -6 ] ];
  const pair: [Point, Point] = [ [ -1, -9 ], [ -5, -9 ] ]; 
  deepStrictEqual(closestPair(points), pair);
}

{
  // +ve and -ve points
  // [(-5, 2),(-1, 2),(-5, 4),(5, 1),(3, 0)]
  // [(-5, 2),(-5, 4)]
  const points: Point[] = [ [ -5, 2 ], [ -1, 2 ], [ -5, 4 ], [ 5, 1 ], [ 3, 0 ] ];
  const pair: [Point, Point] = [ [ -5, 2 ], [ -5, 4 ] ]; 
  deepStrictEqual(closestPair(points), pair);
}

{
  // [(6, 603),(695, 276),(645, 510),(445, 156),(93, 869),(113, 592),(933, 655),(469, 96),(672, 122),(363, 374),(454, 717),(785, 280),(681, 195),(27, 179),(666, 566),(423, 825),(110, 276),(710, 396),(935, 113),(599, 102),(350, 965),(390, 476),(726, 63),(888, 571),(499, 638),(566, 649),(86, 282),(431, 369),(203, 4),(592, 160),(373, 134),(60, 701),(944, 6),(817, 297),(348, 17),(8, 125),(279, 775),(52, 518),(519, 749),(824, 457),(323, 9),(855, 585),(187, 663),(899, 870),(705, 15),(147, 907),(932, 777),(83, 953),(922, 996),(430, 994),(343, 754),(776, 223),(246, 245),(567, 181),(730, 57),(69, 716),(635, 31),(751, 372),(823, 222),(884, 799),(973, 410),(656, 545),(861, 208),(720, 533),(777, 756),(213, 922),(315, 295),(765, 870),(129, 101),(909, 678),(452, 26),(312, 237),(16, 298),(710, 945),(760, 494),(670, 646),(31, 168),(358, 322),(540, 910),(886, 854),(111, 951),(76, 549),(374, 578),(254, 733),(389, 943),(472, 905),(140, 625),(797, 186),(208, 204),(711, 433),(685, 257),(500, 342),(93, 454),(211, 427),(722, 817),(62, 631),(881, 577),(74, 486),(938, 246),(738, 3)]
  // [(726, 63),(730, 57)]
  const points: Point[] = [
    [ 6, 603 ],   [ 695, 276 ], [ 645, 510 ], [ 445, 156 ], [ 93, 869 ],
    [ 113, 592 ], [ 933, 655 ], [ 469, 96 ],  [ 672, 122 ], [ 363, 374 ],
    [ 454, 717 ], [ 785, 280 ], [ 681, 195 ], [ 27, 179 ],  [ 666, 566 ],
    [ 423, 825 ], [ 110, 276 ], [ 710, 396 ], [ 935, 113 ], [ 599, 102 ],
    [ 350, 965 ], [ 390, 476 ], [ 726, 63 ],  [ 888, 571 ], [ 499, 638 ],
    [ 566, 649 ], [ 86, 282 ],  [ 431, 369 ], [ 203, 4 ],   [ 592, 160 ],
    [ 373, 134 ], [ 60, 701 ],  [ 944, 6 ],   [ 817, 297 ], [ 348, 17 ],
    [ 98, 125 ],  [ 279, 775 ], [ 52, 518 ],  [ 519, 749 ], [ 824, 457 ],
    [ 323, 9 ],   [ 855, 585 ], [ 187, 663 ], [ 899, 870 ], [ 705, 15 ],
    [ 147, 907 ], [ 932, 777 ], [ 83, 953 ],  [ 922, 996 ], [ 430, 994 ],
    [ 343, 754 ], [ 776, 223 ], [ 246, 245 ], [ 567, 181 ], [ 730, 57 ],
    [ 69, 716 ],  [ 635, 31 ],  [ 751, 372 ], [ 823, 222 ], [ 884, 799 ],
    [ 973, 410 ], [ 656, 545 ], [ 861, 208 ], [ 720, 533 ], [ 777, 756 ],
    [ 213, 922 ], [ 315, 295 ], [ 765, 870 ], [ 129, 101 ], [ 909, 678 ],
    [ 452, 26 ],  [ 312, 237 ], [ 16, 298 ],  [ 710, 945 ], [ 760, 494 ],
    [ 670, 646 ], [ 31, 168 ],  [ 358, 322 ], [ 540, 910 ], [ 886, 854 ],
    [ 111, 951 ], [ 76, 549 ],  [ 374, 578 ], [ 254, 733 ], [ 389, 943 ],
    [ 472, 905 ], [ 140, 625 ], [ 797, 186 ], [ 208, 204 ], [ 711, 433 ],
    [ 685, 257 ], [ 500, 342 ], [ 93, 454 ],  [ 211, 427 ], [ 722, 817 ],
    [ 62, 631 ],  [ 881, 577 ], [ 74, 486 ],  [ 938, 246 ], [ 738, 3 ]
  ];
  
  const pair: [Point, Point] = [ [ 726, 63 ], [ 730, 57 ] ];
  deepStrictEqual(closestPair(points), pair);
}

{
  // [(-142, 463),(478, -253),(38, 231),(374, 278),(420, -373),(-344, 207),(-439, 487),(219, -301),(-247, -66),(-59, 304),(-324, 360),(152, -488),(-14, 399),(131, -335),(-420, 413),(-330, 81),(270, -388),(-207, -318),(-163, 78),(-213, 112),(-171, 388),(-478, -51),(-39, -258),(265, -396),(297, -414),(11, -137),(-252, -435),(-293, -51),(189, -350),(261, -246),(-103, 196),(130, 115),(372, -357),(399, -11),(75, -455),(203, 229),(-449, 146),(5, -22),(236, 297),(-54, -142),(353, -369),(265, 5),(-324, 305),(165, -403),(-100, -419),(455, -441),(374, -489),(-75, 1),(411, -211),(-182, -353),(-291, 85),(49, -123),(428, 130),(104, -427),(499, -76),(-148, 454),(281, -117),(-251, -4),(-40, -378),(242, -174),(376, -65),(-388, -35),(299, 98),(213, -17),(89, 218),(469, 172),(-313, -278),(404, -277),(291, 47),(388, -380),(-197, -385),(-240, 259),(330, -177),(181, 42),(83, 468),(1, -40),(-130, -92),(360, -300),(13, 473),(303, -88),(66, -209),(-379, -6),(80, 245),(328, -230),(-143, -376),(249, -19),(7, 346),(-273, 32),(4, -378),(-72, -1),(-63, 206),(121, 94),(-343, -264),(148, -491),(-432, 37),(160, 149),(395, 8),(102, 114),(-328, -264),(301, -427)]
  // [(-75, 1),(-72, -1)]
  const points: Point[] = [
    [ -142, 463 ],  [ 478, -253 ],  [ 38, 231 ],    [ 374, 278 ],   [ 420, -373 ],
    [ -344, 207 ],  [ -439, 487 ],  [ 219, -301 ],  [ -247, -66 ],  [ -59, 304 ],
    [ -324, 360 ],  [ 152, -488 ],  [ -14, 399 ],   [ 131, -335 ],  [ -420, 413 ],
    [ -330, 81 ],   [ 270, -388 ],  [ -207, -318 ], [ -163, 78 ],   [ -213, 112 ],
    [ -171, 388 ],  [ -478, -51 ],  [ -39, -258 ],  [ 265, -396 ],  [ 297, -414 ],
    [ 11, -137 ],   [ -252, -435 ], [ -293, -51 ],  [ 189, -350 ],  [ 261, -246 ],
    [ -103, 196 ],  [ 130, 115 ],   [ 372, -357 ],  [ 399, -11 ],   [ 75, -455 ],
    [ 203, 229 ],   [ -449, 146 ],  [ 5, -22 ],     [ 236, 297 ],   [ -54, -142 ],
    [ 353, -369 ],  [ 265, 5 ],     [ -324, 305 ],  [ 165, -403 ],  [ -100, -419 ],
    [ 455, -441 ],  [ 374, -489 ],  [ -75, 1 ],     [ 411, -211 ],  [ -182, -353 ],
    [ -291, 85 ],   [ 49, -123 ],   [ 428, 130 ],   [ 104, -427 ],  [ 499, -76 ],
    [ -148, 454 ],  [ 281, -117 ],  [ -251, -4 ],   [ -40, -378 ],  [ 242, -174 ],
    [ 376, -65 ],   [ -388, -35 ],  [ 299, 98 ],    [ 213, -17 ],   [ 89, 218 ],
    [ 469, 172 ],   [ -313, -278 ], [ 404, -277 ],  [ 291, 47 ],    [ 388, -380 ],
    [ -197, -385 ], [ -240, 259 ],  [ 330, -177 ],  [ 181, 42 ],    [ 83, 468 ],
    [ 1, -40 ],     [ -130, -92 ],  [ 360, -300 ],  [ 13, 473 ],    [ 303, -88 ],
    [ 66, -209 ],   [ -379, -6 ],   [ 80, 245 ],    [ 328, -230 ],  [ -143, -376 ],
    [ 249, -19 ],   [ 7, 346 ],     [ -273, 32 ],   [ 4, -378 ],    [ -72, -1 ],
    [ -63, 206 ],   [ 121, 94 ],    [ -343, -264 ], [ 148, -491 ],  [ -432, 37 ],
    [ 160, 149 ],   [ 395, 8 ],     [ 102, 114 ],   [ -328, -264 ], [ 301, -427 ]
  ];

  const pair: [Point, Point] = [ [ -75, 1 ], [ -72, -1 ] ]; 
  deepStrictEqual(closestPair(points), pair);
}

